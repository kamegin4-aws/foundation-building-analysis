@startuml
' Entities
entity "User(Cognito)" as user {
  +user_id: uuid: ユーザーID [PK]
  user_name: string: ユーザー名
  email: string: Eメール
  plan: string: プラン名
  access_token: string: アクセストークン
  id_token: string: IDトークン
  refresh_token: string: リフレッシュトークン
  expires: timestamptz: 有効期限
  created_at: timestamptz: 作成日時
  updated_at : timestamptz: 更新日時
  --
}

entity "RelationalData(RDS)" as relational_data {
  +relational_id: uuid: 関係データID [PK]
  --
  meta_key: varchar: メタデータキー
  meta_value: varchar: メタデータバリュー
  version_id: uuid: バージョンID
  key: varchar: キー
  value: varchar: バリュー
  comment: varchar: コメント
  created_at: timestamptz: 作成日時
  updated_at : timestamptz: 更新日時
  user_id: varchar: ユーザーID [FK]
  unique : [user_id, meta_key, meta_value, version_id, key]
}

entity "ObjectData(S3)" as object_data {
  +pah: string: userId=user_id/metaKey=meta_key/metaValue=meta_value/mimeType=mime_type/fileName?versionId [PK]
  --
  meta_key: string: メタデータキー
  meta_value: string: メタデータバリュー
  mime_type: string: MIMEタイプ(audio, image, text...)
  fileName: string: ファイル名
  comment: string: コメント
  signed_uri: string: 署名済みURI
  versionId: string: バージョンID
  updated_at : string: 更新日時
  user_id: string: ユーザーID
}

entity "ETL(S3)" as etl {
  +pah: string: userId=user_id/metaKey=meta_key/metaValue=meta_value/mimeType=mime_type/name?versionId [PK]
  --
  meta_key: string: メタデータキー
  meta_value: string: メタデータバリュー
  mime_type: string: MIMEタイプ(audio, image, text...)
  name: string: ファイル(テーブル)名
  versionId: string: バージョンID
  user_id: string: ユーザーID
}

entity "AI(S3)" as ai {
  +pah: string: userId=user_id/metaKey=meta_key/metaValue=meta_value/aiType=ai_type/experimentName=experiment_name/step=step/experimentName?versionId [PK]
  --
  meta_key: string: メタデータキー
  meta_value: string: メタデータバリュー
  ai_type: string: AIタイプ(画像認識, 音声認識, 動画認識...)
  experiment_name: string: 実験名
  step: string: 実験ステップ((ラベリング), (特徴量), (学習), 推論...)
  comment: string: コメント
  versionId: string: バージョンID
  user_id: string: ユーザーID
}

entity "Analytics(S3)" as analytics {
  +pah: string: userId=user_id/metaKey=meta_key/metaValue=meta_value/analysisName=analysisName/analysisName?versionId [PK]
  --
  meta_key: string: メタデータキー
  meta_value: string: メタデータバリュー
  analysisName: string: 分析名
  comment: string: コメント
  versionId: string: バージョンID
  user_id: string: ユーザーID
}

entity "Progress(DynamoDB)" as progress {
  +progress_id: string: datetime.service_name_suffix (進捗ID) [PK]
  --
  meta_key: string: メタデータキー
  meta_value: string: メタデータバリュー
  service_name: string: サービス名
  status: string: ステータス
  created_at: number: 作成日時 [SK]
  user_id: string: ユーザーID [GSI]
}

' Relationships
user ||--o{ relational_data: リレーショナルデータを保存
user ||--o{ object_data: オブジェクトデータを保存
relational_data ||--|| etl: データを正規化
object_data ||--|| etl: データを正規化
etl ||--o{ ai: ラベリング,学習,推論
etl ||--o{ analytics: 分析
ai ||--o{ analytics: 分析

@enduml
